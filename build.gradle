// Establish version and status
ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name

buildscript {
    repositories {
        mavenCentral() 
    }
    apply from: file('gradle/buildscript.gradle'), to: buildscript
}

allprojects {
    configurations {
        includeInJar
    }
    repositories { 
        mavenCentral() 
    }
    tasks.withType(JavaCompile) {
        sourceCompatibility = "1.6"
        targetCompatibility = "1.6"
    }
}

apply from: file('gradle/convention.gradle')
apply from: file('gradle/maven.gradle')
//apply from: file('gradle/check.gradle')
//apply from: file('gradle/license.gradle')
apply from: file('gradle/release.gradle')

subprojects {
    group = "com.netflix.${githubProjectName}" // TEMPLATE: Set to organization of project

    dependencies {
        testCompile 'org.testng:testng:6.1.1'
        testCompile 'org.easymock:easymock:3.0'
    }
}

project(':aegisthus-distcp') {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    dependencies {
        configurations.includeInJar {
            transitive = false
        }
        includeInJar project(':aegisthus-core')
        includeInJar 'org.xerial.snappy:snappy-java:1.0.4.1'
        includeInJar 'com.google.guava:guava:12.0'

        configurations.compile.extendsFrom(configurations.includeInJar)
    }
    jar {
        from { configurations.includeInJar.collect { it.isDirectory() ? it : zipTree(it) } }
    }
}

project(':aegisthus-core') {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    dependencies {
        includeInJar 'com.google.guava:guava:12.0'
        includeInJar 'com.fasterxml.jackson.core:jackson-core:2.1.4'
        includeInJar 'com.fasterxml.jackson.core:jackson-annotations:2.1.4'
        includeInJar 'com.fasterxml.jackson.core:jackson-databind:2.1.4'
        compile 'org.apache.pig:pig:0.11.1'
        compile 'org.slf4j:slf4j-api:1.6.3'
        includeHadoopLibs(project)

        configurations.compile.extendsFrom(configurations.includeInJar)
    }
    jar {
        from { configurations.includeInJar.collect { it.isDirectory() ? it : zipTree(it) } }
    }
}

project(':aegisthus-hadoop') {
    apply plugin: 'java'
    apply plugin: 'eclipse'

    dependencies {
        configurations.includeInJar {
            transitive = false
        }
        includeInJar project(':aegisthus-core')
        includeInJar project(':aegisthus-distcp')
        includeInJar 'org.apache.cassandra:cassandra-all:1.2.15'
        includeInJar 'org.apache.thrift:libthrift:0.7.0'
        includeInJar 'org.apache.pig:pig:0.11.1'
        includeInJar 'org.xerial.snappy:snappy-java:1.0.4.1'
        includeInJar 'com.netflix.rxjava:rxjava-core:0.19.6'

        compile 'org.slf4j:slf4j-api:1.6.3'
        includeHadoopLibs(project)

        configurations.compile.extendsFrom(configurations.includeInJar)
    }

    jar {
        from { configurations.includeInJar.collect { it.isDirectory() ? it : zipTree(it) } }
    }
}

project(':aegisthus-pig') {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    dependencies {
        includeInJar project(':aegisthus-core')
        includeInJar project(':aegisthus-hadoop')
        compile 'org.apache.pig:pig:0.11.1'
        compile 'joda-time:joda-time:1.6'
        includeHadoopLibs(project)

        configurations.compile.extendsFrom(configurations.includeInJar)
    }

    jar {
        from { configurations.includeInJar.collect { it.isDirectory() ? it : zipTree(it) } }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}

// include correct hadoop libraries for version
def includeHadoopLibs(project) {
    hadoopVersion = hadoopVersion ?: '1.1.0'
    if (hadoopVersion.startsWith('1')) {
        project.dependencies {
            compile "org.apache.hadoop:hadoop-core:$hadoopVersion"
        }
    } else {
        project.dependencies {
            compile "org.apache.hadoop:hadoop-common:$hadoopVersion"
            compile "org.apache.hadoop:hadoop-hdfs:$hadoopVersion"
            compile "org.apache.hadoop:hadoop-mapreduce-client-core:$hadoopVersion"
            compile "org.apache.hadoop:hadoop-mapreduce-client-jobclient:$hadoopVersion"
        }
    }
}
